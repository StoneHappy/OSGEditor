if(NOT TARGET ENTT)
    add_subdirectory(entt)
    set_target_properties(ENTT PROPERTIES FOLDER Vendors/entt)
endif()

if(NOT TARGET spdlog)
    add_subdirectory(spdlog)
    set_target_properties(spdlog PROPERTIES FOLDER Vendors/spdlog)
endif()

if(NOT TARGET vcglib)
    add_subdirectory(vcglib)
    set_target_properties(vcglib_ide PROPERTIES FOLDER Vendors/vcglib)
    add_library(vcgwrap ${CMAKE_CURRENT_SOURCE_DIR}/vcglib/wrap/ply/plylib.cpp)
    set_target_properties(vcgwrap PROPERTIES FOLDER Vendors/vcglib)
endif()

if(NOT TARGET imgui)
    set(imgui_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/imgui)
    file(GLOB imgui_sources CONFIGURE_DEPENDS  "${imgui_SOURCE_DIR}/*.cpp")
    file(GLOB imgui_headers CONFIGURE_DEPENDS  "${imgui_SOURCE_DIR}/*.h")
    add_library(imgui STATIC ${imgui_sources} ${imgui_headers})
    target_include_directories(imgui PUBLIC $<BUILD_INTERFACE:${imgui_SOURCE_DIR}>)
    set_target_properties(imgui PROPERTIES FOLDER Vendors/imgui)
endif()

if(NOT TARGET qt_imgui_widgets)
    add_subdirectory(qtimgui)
    set_target_properties(qt_imgui_widgets PROPERTIES FOLDER Vendors/qtimgui)
    set_target_properties(qt_imgui_quick PROPERTIES FOLDER Vendors/qtimgui)
endif()

if(NOT TARGET imguizmo)
    set(imguizmo_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/ImGuizmo)
    file(GLOB imguizmo_sources CONFIGURE_DEPENDS  "${imguizmo_SOURCE_DIR}/*.cpp")
    file(GLOB imguizmo_headers CONFIGURE_DEPENDS  "${imguizmo_SOURCE_DIR}/*.h")
    add_library(imguizmo STATIC ${imguizmo_sources} ${imguizmo_headers})
    target_include_directories(imguizmo PUBLIC $<BUILD_INTERFACE:${imguizmo_SOURCE_DIR}>)
    target_link_libraries(imguizmo PUBLIC imgui)
    set_target_properties(imguizmo PROPERTIES FOLDER Vendors/imguizmo)
endif()

if(NOT TARGET glm)
    option(BUILD_STATIC_LIBS "" ON)
    option(BUILD_TESTING "" OFF)
    option(GLM_TEST_ENABLE "" OFF)
    add_subdirectory(glm)
    set_target_properties(glm_static PROPERTIES FOLDER Vendors/glm)
    set_target_properties(uninstall PROPERTIES FOLDER Vendors/glm)
endif()